'use strict';

var maxHabilidades = 3;
var numActualHabilidades = 1;
var habilidades = [];
var optionHabilidades = document.querySelector('.select__habilidades');
var buttonAddSelect = document.querySelector('.button__add-select');
buttonAddSelect.addEventListener('click', createSelect);
var fieldsetSelects = document.querySelector('.fieldset__div--habilidades-new');
var currentSelect;


function loadSelect() {
  fetch('https://raw.githubusercontent.com/Adalab/dorcas-s2-proyecto-data/master/skills.json')
    .then(function(listado) {

      return listado.json();
    })
    .then(function(listadoJSON) {

      habilidades = listadoJSON.skills;
      habilidades2options()
    });
}

function habilidades2options() {
  var optionElement;
  var optionText;
  var selectHabilidades = document.querySelectorAll('.select__habilidades');

  for (var j = 0; j < selectHabilidades.length; j++) {

    currentSelect = selectHabilidades[j];

    for (var i = 0; i < habilidades.length; i++) {
      optionElement = document.createElement('option');
      optionElement.value = habilidades[i];
      optionText = document.createTextNode(habilidades[i]);
      optionElement.appendChild(optionText);

      currentSelect.appendChild(optionElement);
    }
    var currentSelectNumber = j + 1;
    currentSelect.name = 'Habilidade' + currentSelectNumber;

    if (currentSelect.getAttribute('data-eventlistener') !== 'true') {

      currentSelect.addEventListener('change', guardarDataLSSelect); //  localStorage.js
      currentSelect.setAttribute('data-eventlistener', true);
    }
  }
}


function createSelect() {

  if (numActualHabilidades === maxHabilidades) {
    return false;
  } else {
    numActualHabilidades++;

    var createSelectDiv = document.createElement('div');
    createSelectDiv.classList.add('div__habilidades');
    var createSelectSelect = document.createElement('select');
    createSelectSelect.classList.add('select__habilidades', 'select__habilidades' + numActualHabilidades);

    var createSelectDivIcon = document.createElement('div');
    createSelectDivIcon.classList.add('button__add-select--container');
    var createSelectIcon = document.createElement('i');

    createSelectIcon.classList.add('fas', 'fa-plus', 'button__add-select', 'button__add-select' + numActualHabilidades);

    createSelectDivIcon.appendChild(createSelectIcon);
    createSelectDiv.append(createSelectSelect, createSelectDivIcon);

    fieldsetSelects.appendChild(createSelectDiv);

    habilidades2options();

    addButtonsEvents();
  }
}

function addButtonsEvents() {

  var buttonsAddSelect = document.querySelectorAll('.button__add-select');

  for (var w = 0; w < buttonsAddSelect.length; w++) {

    var buttonRemove = numActualHabilidades - 1;

    buttonsAddSelect[w].removeEventListener('click', createSelect);
    buttonsAddSelect[w].removeEventListener('click', removeSelect);
    buttonsAddSelect[w].parentElement.classList.remove('hide');


    if (buttonsAddSelect[w].classList.contains('button__add-select' + buttonRemove)) {
      buttonsAddSelect[w].classList.remove('fa-plus');
      buttonsAddSelect[w].classList.add('fa-minus');
      buttonsAddSelect[w].addEventListener('click', removeSelect);
    } else {
      if (numActualHabilidades === 3 && buttonsAddSelect[w].classList.contains('button__add-select1')) {
        buttonsAddSelect[w].parentElement.classList.add('hide');
      } else {
        buttonsAddSelect[w].addEventListener('click', createSelect);
        buttonsAddSelect[w].classList.add('fa-plus');
        buttonsAddSelect[w].classList.remove('fa-minus');
      }
    }
  }

  aplicarColor(infoTarjeta.color);
}


function removeSelect() {

  numActualHabilidades--;
  fieldsetSelects.lastChild.remove();
  if (numActualHabilidades === 2) {
    habilidade3LocalStorage = '';
    document.querySelector('.card__foot--box-Habilidade3').remove();
  } else if (numActualHabilidades === 1) {
    habilidade2LocalStorage = '';
    document.querySelector('.card__foot--box-Habilidade2').remove();
  }
  guardarDataLS()
  addButtonsEvents()
}


// loadSelect();

//colapsables

// var collapsibles = document.querySelectorAll(".collapsible");
// var contenido = document.querySelectorAll(".collapsible__content");

var collapsibleTriggers = document.querySelectorAll(".collapsible__label");

for (var i = 0; i < collapsibleTriggers.length; i++) {
  collapsibleTriggers[i].addEventListener("click", updateCollapsibles);
}

function updateCollapsibles(event) {
  // var move = document.querySelector(".fieldset__rellena--arrow");
  for (var i = 0; i < collapsibleTriggers.length; i++) {

    collapsibleTriggers[i].parentElement.parentElement.classList.add("fieldset--invisible");
  }
  var madre = event.currentTarget.parentElement.parentElement;
  madre.classList.toggle("fieldset--invisible");
  console.log(event);
}

/*Generar tarjeta*/

// var submitButton = document.querySelector('#submit');
// var responseURL = document.querySelector('.response');
// var form = document.querySelector('.formulario');
// var fr = new FileReader();
// submitButton.addEventListener('click', loadPhoto);
//
// function sendData() {
//   var inputs = Array.from(form.elements);
//   var json = getJSONFromInputs(inputs);
//   json.skills = ['Javascript', 'React'];
//   json.photo = fr.result;
//   sendRequest(json);
// }
//
// function getJSONFromInputs(json) {
//   fetch('https://us-centrall-awesome-cards-cf6f0.cloudfunctions.net/card/', {
//       method: 'POST',
//       body: JSON.stringify(json),
//       headers: {
//         'content-type': 'application/json'
//       },
//     })
//     .then(function(resp) {
//       return resp.json();
//     })
//     .then(function(result) {
//       showURL(result);
//     })
//     .catch(function(error) {
//       console.log(error);
//     })
// }

function showURL(result) {
  if (result.success) {
    responseURL.innerHTML = '<a href=' + result.cardURL + '>' + result.cardURL + '</a>';
  } else {
    responseURL.innerHTML = 'ERROR:' + result.error;
  }
}
'use strict';

const MOBILELINK = document.querySelector('.mobileLink');
const EMAILLINK = document.querySelector('.emailLink');
const LINKEDINLINK = document.querySelector('.linkedinLink');
const GITHUBLINK = document.querySelector('.githubLink');

const INPUTEMAIL = document.querySelector('.fieldset__rellena--input-email');
const INPUTELEFONO = document.querySelector('.fieldset__rellena--input-mobile');
const INPUTLINKEDIN = document.querySelector('.fieldset__rellena--input-linkedin');
const INPUTGITHUB = document.querySelector('.fieldset__rellena--input-github');


const CONTACT = document.querySelector('.contact');

// TODO: llamar localStorage //


const showIcon = event => {
  if (event.target !== event.currentTarget) {

    const GUILTY = event.target.className;
    let changeIcon;

    if (GUILTY.indexOf('email') >= 0) {
      const EMAIL2LINK = event.target.value;
      EMAILLINK.href = `mailto:${EMAIL2LINK}`;
      changeIcon = 'email';

    } else if (GUILTY.indexOf('mobile') >= 0) {
      const MOBILE2LINK = event.target.value;
      MOBILELINK.href = `tel:${MOBILE2LINK}`;
      changeIcon = 'mobile';

    } else if (GUILTY.indexOf('linkedin') >= 0) {
      const LINKEDIN2LINK = event.target.value;
      LINKEDINLINK.href = `http://linkedin.com/in/${LINKEDIN2LINK}`;
      changeIcon = 'linkedin';

    } else if (GUILTY.indexOf('github') >= 0) {
      const GITHUB2LINK = event.target.value;
      GITHUBLINK.href = `https://github.com/${GITHUB2LINK}`;
      changeIcon = 'github';
    }

    let ICON2TOGGLE = document.querySelector(`.${changeIcon}`);

    if (event.target.value === '') {
      ICON2TOGGLE.style.display = 'none';
    } else {
      ICON2TOGGLE.style.display = 'flex';
    }
    event.stopPropagation();
  }
};

CONTACT.addEventListener('keyup', showIcon);

'use strict';

const FR = new FileReader();

const UPLOADBTN = document.querySelector('.aÃ±adir__upload-btn');
const FILEFIELD = document.querySelector('#img-selector');
const PROFILEIMAGE = document.querySelector('.card__pic');
const MINIBOX = document.querySelector('.mini');

const writeImage = () => {
  PROFILEIMAGE.style.backgroundImage = `url(${FR.result})`;
  MINIBOX.style.backgroundImage = `url(${FR.result})`;
};

const getImage = e => {
  const MYFILE = e.currentTarget.files[0];
  FR.addEventListener('load', writeImage);
  FR.readAsDataURL(MYFILE);
};

const fakeFileClick = () => FILEFIELD.click();

FILEFIELD.addEventListener('change', getImage);
UPLOADBTN.addEventListener('click', fakeFileClick);


function fakeFileClick() {
  fileField.click();
}
fileField.addEventListener('change', getImage);
uploadBtn.addEventListener('click', fakeFileClick);
"use strict";

/* global jobVisor iconBorderVisor profileImage miniBox nombreVisor */

const RESETBUTTON = document.querySelector(".reset");
const FORMREMOVE = document.querySelectorAll(".fieldset__rellena--input");
// var colorRemove = document.querySelector('#')
const resetAll = () => {
  // // paleta reset
  // card.classList.remove('paleta-azul', 'paleta-roja', 'paleta-gris');
  // card.classList.add('paleta-azul');
  // // font reset
  // cardInfo.classList.remove('font-card--comicsans', 'font-card--ubuntu', 'font-card--montserrat');
  // cardInfo.classList.add('font-card--comicsans');

  // reset nombre y role
  nombreVisor.innerHTML = "Nombre Apellido";
  jobVisor.innerHTML = "Descripcion";

  //reset pic
  profileImage.style.backgroundImage = "url(../images/pollito.png)";
  miniBox.style.backgroundImage = "url(../images/pollito.png)";

  // quitar iconos
  for (const ocult of iconBorderVisor) {
    ocult.style.display = "none";
  }
  //quitar valores introducidos en el formulario

  for (const ocult2 of FORMREMOVE) {
    ocult2.value = "";
  }
};
RESETBUTTON.addEventListener("click", resetAll);

'use strict';

const NAMEFIELD = document.querySelector('.fieldset--name');
const ROLEFIELD = document.querySelector('.fieldset--role');

const writeData = event => {
  const GUILTYELEMENT = event.currentTarget;
  const TARGETID = GUILTYELEMENT.getAttribute('data-donde');
  document.querySelector(`#${TARGETID}`).innerHTML = GUILTYELEMENT.value;
};
NAMEFIELD.addEventListener('keyup', writeData);
ROLEFIELD.addEventListener('keyup', writeData);


function writeData(event){
  var guiltyElement = event.currentTarget;
  var targetID = guiltyElement.getAttribute('data-donde');
 document.querySelector('#' + targetID).innerHTML = guiltyElement.value;
}
nameField.addEventListener('keyup', writeData);
roleField.addEventListener('keyup', writeData);
"use strict";

const NOMBREVISOR = document.querySelector(".card__name--name");
const BORDERVISOR = document.querySelector(".card__head--border");
const ICONBORDERVISOR = document.querySelectorAll(".card__foot--icon");
const ICONVISOR = document.querySelectorAll(".iconsocial");
const FONDOHABILIDADES = document.querySelectorAll(".card__foot--box");
const COLORVISOR = document.querySelectorAll(".diseÃ±a__colores--paleta");
const BORDERVISORHEAD = document.querySelector(".card__foot--social");
const JOBVISOR = document.querySelector(".card__job--job");
const FUENTEVISOR = document.querySelectorAll(".diseÃ±a--fuentes");

const cambiarColor = event => {
  let colorTrigger;
  colorTrigger = event.currentTarget.id;
  console.log("cambiarColor disparada: " + colorTrigger);
  aplicarColor(colorTrigger);
  guardarColoresLS(colorTrigger);
};

for (const changeColor of COLORVISOR) {
  changeColor.addEventListener("click", cambiarColor);
}

const aplicarColor = disparador => {
  if (disparador === "rojo") {
    NOMBREVISOR.classList.remove("gris");
    NOMBREVISOR.classList.add("rojo");
    BORDERVISOR.classList.remove("gris");
    BORDERVISOR.classList.add("rojo");
    BORDERVISORHEAD.classList.remove("gris");
    BORDERVISORHEAD.classList.add("rojo");

    for (const changeIcon of ICONVISOR) {
      changeIcon.classList.remove("gris");
      changeIcon.classList.add("rojo");
    }

    for (const changeHabilidades of FONDOHABILIDADES) {
      changeHabilidades.classList.remove("gris");
      changeHabilidades.classList.add("rojo");
    }

    for (const changeBorderVisor of ICONBORDERVISOR) {
      changeBorderVisor.classList.remove("gris");
      changeBorderVisor.classList.add("rojo");
    }
  } else if (disparador === "gris") {
    NOMBREVISOR.classList.remove("rojo");
    NOMBREVISOR.classList.add("gris");
    BORDERVISOR.classList.remove("rojo");
    BORDERVISOR.classList.add("gris");
    BORDERVISORHEAD.classList.remove("rojo");
    BORDERVISORHEAD.classList.add("gris");

    for (const changeIcon2 of ICONVISOR) {
      changeIcon2.classList.remove("rojo");
      changeIcon2.classList.add("gris");
    }

    for (const changeHabilidades2 of FONDOHABILIDADES) {
      changeHabilidades2.classList.remove("rojo");
      changeHabilidades2.classList.add("gris");
    }

    for (const changeIconBorder2 of ICONBORDERVISOR) {
      changeIconBorder2.classList.remove("rojo");
      changeIconBorder2.classList.add("gris");
    }
  } else if (disparador === "azul") {
    NOMBREVISOR.classList.remove("rojo", "gris");
    BORDERVISOR.classList.remove("rojo", "gris");
    BORDERVISORHEAD.classList.remove("rojo", "gris");

    for (const changeIcon3 of ICONVISOR) {
      changeIcon3.classList.remove("rojo", "gris");
    }

    for (const changeHabilidades3 of FONDOHABILIDADES) {
      changeHabilidades3.classList.remove("rojo", "gris");
    }

    for (const changeIconBorder3 of ICONBORDERVISOR) {
      changeIconBorder3.classList.remove("rojo", "gris");
    }
  }
};

const cambiarFuente = eventFuente => {
  let fuenteTrigger;
  fuenteTrigger = eventFuente.currentTarget.id;
  console.log("cambiarFuente disparada: " + fuenteTrigger);
  aplicarFuente(fuenteTrigger);
  guardarFuentesLS(fuenteTrigger);
};

for (const changeFont of FUENTEVISOR) {
  changeFont.addEventListener("click", cambiarFuente);
}

const aplicarFuente = disparadorFuente => {
  if (disparadorFuente === "ubuntu") {
    NOMBREVISOR.classList.remove("montserrat");
    NOMBREVISOR.classList.add("ubuntu");
    JOBVISOR.classList.remove("montserrat");
    JOBVISOR.classList.add("ubuntu");
  } else if (disparadorFuente === "montserrat") {
    NOMBREVISOR.classList.remove("ubuntu");
    NOMBREVISOR.classList.add("montserrat");
    JOBVISOR.classList.remove("ubuntu");
    JOBVISOR.classList.add("montserrat");
  } else if (disparadorFuente === "comicsans") {
    JOBVISOR.classList.remove("ubuntu");
    JOBVISOR.classList.remove("montserrat");
    NOMBREVISOR.classList.remove("ubuntu");
    NOMBREVISOR.classList.remove("montserrat");
  }
};

'use strict';
/* global nameField roleField profileImage inputEmail inputTelefono inputLinkedin inputGithub miniBox fotoURL */

// Funciones localstorage

var infoTarjeta = {};
var habilidade1LocalStorage;
var habilidade2LocalStorage;
var habilidade3LocalStorage;
var guilty;
var fuenteSeleccionada;
var colorSeleccionado;


function verifySelectValues() {
  infoTarjeta = JSON.parse(localStorage.getItem('Profile-Card'));
  if (infoTarjeta.habilidade1) {
    habilidade1LocalStorage = infoTarjeta.habilidade1;
  } else {
    habilidade1LocalStorage = '';
  }
  if (infoTarjeta.habilidade2) {
    habilidade2LocalStorage = infoTarjeta.habilidade2;
  } else {
    habilidade2LocalStorage = '';
  }
  if (infoTarjeta.habilidade3) {
    habilidade3LocalStorage = infoTarjeta.habilidade3;
  } else {
    habilidade3LocalStorage = '';
  }


}

// -------------------- addEventListeners para los input, para guardar el texto en LS
nameField.addEventListener('focusout', guardarDataLS);
roleField.addEventListener('focusout', guardarDataLS);
inputEmail.addEventListener('focusout', guardarDataLS);
inputTelefono.addEventListener('focusout', guardarDataLS);
inputLinkedin.addEventListener('focusout', guardarDataLS);
inputGithub.addEventListener('focusout', guardarDataLS);

function guardarDataLSSelect(event) {

  guilty = event.currentTarget;

  guilty.classList.add('select__habilidades-active');

  if (guilty.name === 'Habilidade1') {
    habilidade1LocalStorage = guilty.value;

    if (document.querySelector('.card__foot--box-Habilidade1')) {
      document.querySelector('.card__foot--box-Habilidade1').remove();
    }
  } else if (guilty.name === 'Habilidade2') {

    if (document.querySelector('.card__foot--box-Habilidade2')) {
      document.querySelector('.card__foot--box-Habilidade2').remove();
    }

    habilidade2LocalStorage = guilty.value;

  } else if (guilty.name === 'Habilidade3') {
    habilidade3LocalStorage = guilty.value;
    if (document.querySelector('.card__foot--box-Habilidade3')) {
      document.querySelector('.card__foot--box-Habilidade3').remove();
    }
  }
  habilidades2Visor()

  guardarDataLS()
}

function habilidades2Visor() {
  var habilidadVisorSkillsBox = document.querySelector('.card__foot--skills');
  var habilidadVisorDIV = document.createElement('div');
  habilidadVisorDIV.classList.add('card__foot--box', 'card__foot--box-' + guilty.name);
  var habilidadVisorP = document.createElement('p');
  habilidadVisorP.classList.add('card__foot--text', 'uppercase');
  var habilidadVisorText = document.createTextNode(guilty.value);

  habilidadVisorP.appendChild(habilidadVisorText);
  habilidadVisorDIV.appendChild(habilidadVisorP);
  habilidadVisorSkillsBox.appendChild(habilidadVisorDIV);
}

function guardarDataLS() {

  if (!localStorage.getItem('Profile-Card')) {
    infoTarjeta = {
      'nombre': '',
      'puesto': '',
      'foto': '',
      'email': '',
      'telefono': '',
      'linkedin': '',
      'github': '',
      'habilidade1': '',
      'habilidade2': '',
      'habilidade3': '',
      'color': 'azul',
      'fuente': 'ubuntu'
    }

  } else {
    infoTarjeta = JSON.parse(localStorage.getItem('Profile-Card'));
  }

  infoTarjeta.nombre = nameField.value;
  infoTarjeta.puesto = roleField.value;
  infoTarjeta.foto = fotoURL;
  infoTarjeta.email = inputEmail.value;
  infoTarjeta.telefono = inputTelefono.value;
  infoTarjeta.linkedin = inputLinkedin.value;
  infoTarjeta.github = inputGithub.value;
  infoTarjeta.habilidade1 = habilidade1LocalStorage;
  infoTarjeta.habilidade2 = habilidade2LocalStorage;
  infoTarjeta.habilidade3 = habilidade3LocalStorage;
  infoTarjeta.color = colorSeleccionado;
  infoTarjeta.fuente = fuenteSeleccionada;

  localStorage.setItem('Profile-Card', JSON.stringify(infoTarjeta));
}

function guardarFuentesLS(idFuentes) {
  console.log(idFuentes);
  fuenteSeleccionada = idFuentes;
  guardarDataLS();
}

function guardarColoresLS(disparadorFuente) {
  colorSeleccionado = disparadorFuente;
  guardarDataLS();
}


function recuperarDataLS() {

  if (localStorage.getItem('Profile-Card')) {
    infoTarjeta = JSON.parse(localStorage.getItem('Profile-Card'));

    if (infoTarjeta.color) {
      document.querySelector('#' + infoTarjeta.color).checked = true;
      aplicarColor(infoTarjeta.color);
    }
    if (infoTarjeta.fuente) {
      document.querySelector('#' + infoTarjeta.fuente).checked = true;
      aplicarFuente(infoTarjeta.fuente);
    }


    nameField.value = infoTarjeta.nombre;
    nombreVisor.innerHTML = infoTarjeta.nombre;
    roleField.value = infoTarjeta.puesto;
    jobVisor.innerHTML = infoTarjeta.puesto;
    profileImage.style.backgroundImage = infoTarjeta.foto;
    miniBox.style.backgroundImage = infoTarjeta.foto;
    profileImage.value = infoTarjeta.foto;
    inputEmail.value = infoTarjeta.email;
    inputTelefono.value = infoTarjeta.telefono;
    inputLinkedin.value = infoTarjeta.linkedin;
    inputGithub.value = infoTarjeta.github;


    if (inputEmail.value !== '') {
      emailLink.href = 'mailto:' + inputEmail.value;
      document.querySelector('.email').style.display = 'flex';
    }

    if (inputTelefono.value !== '') {
      mobileLink.href = 'tel:' + inputTelefono.value;
      document.querySelector('.mobile').style.display = 'flex';
    }

    if (inputLinkedin.value !== '') {
      inputLinkedin.href = 'http://linkedin.com/in/' + inputLinkedin.value;
      document.querySelector('.linkedin').style.display = 'flex';
    }

    if (inputGithub.value !== '') {
      inputGithub.href = 'https://github.com/' + inputGithub.value;
      document.querySelector('.github').style.display = 'flex';
    }



    loadSelect();
    setTimeout(determineSelectsValuesOnRecoverData, 2000);
    // setTimeout(function() {
    //   document.querySelector('#' + infoTarjeta.fuente).click();
    // }, 2000);
    // setTimeout(function() {
    //   document.querySelector('#' + infoTarjeta.color).click();
    // }, 2000);

  } else {
    loadSelect();
  }
}

function determineSelectsValuesOnRecoverData() {
  if (infoTarjeta.habilidade1.indexOf(habilidades)) {
    guilty = document.querySelector('.select__habilidades1');
    guilty.value = infoTarjeta.habilidade1;
    guilty.classList.add('select__habilidades-active');
    habilidades2Visor()
  }
  if (infoTarjeta.habilidade2.indexOf(habilidades)) {
    createSelect();
    guilty = document.querySelector('.select__habilidades2');
    guilty.value = infoTarjeta.habilidade2;
    guilty.classList.add('select__habilidades-active');
    habilidades2Visor()
  }
  if (infoTarjeta.habilidade3.indexOf(habilidades)) {
    createSelect();
    guilty = document.querySelector('.select__habilidades3');
    guilty.value = infoTarjeta.habilidade3;
    guilty.classList.add('select__habilidades-active');
    habilidades2Visor()
  }
}

// -------------- Se ejecuta al iniciar la pÃ¡gina
recuperarDataLS();



// -------------- Generar tarjeta para exportaciÃ³n

var obj2Export = {
  "palette": 0,
  "typography": 0,
  "name": '',
  "job": '',
  "phone": '',
  "email": '',
  "linkedin": '',
  "github": '',
  "photo": '',
  "skills": []
}

function do2Export() {
  var palette;
  var typography;

  infoTarjeta = JSON.parse(localStorage.getItem('Profile-Card'));

  if (infoTarjeta.color === 'azul') {
    palette = 1;
  } else if (infoTarjeta.color === 'rojo') {
    palette = 2;
  } else if (infoTarjeta.color === 'gris') {
    palette = 3;
  }

  if (infoTarjeta.fuente === 'ubuntu') {
    typography = 1;
  } else if (infoTarjeta.fuente === 'comicsans') {
    typography = 2;
  } else if (infoTarjeta.fuente === 'montserrat') {
    typography = 3;
  }


  obj2Export.palette = palette;
  obj2Export.typography = typography;
  obj2Export.name = infoTarjeta.nombre;
  obj2Export.job = infoTarjeta.puesto;
  obj2Export.phone = infoTarjeta.telefono;
  obj2Export.email = infoTarjeta.email;
  obj2Export.linkedin = infoTarjeta.linkedin;
  obj2Export.github = infoTarjeta.github;
  obj2Export.photo = infoTarjeta.foto;
  obj2Export.skills.splice(0);
  obj2Export.skills.push(infoTarjeta.habilidade1);
  obj2Export.skills.push(infoTarjeta.habilidade2);
  obj2Export.skills.push(infoTarjeta.habilidade3);

  console.log('Objecto preparado para ser exportado:');
  console.log(obj2Export);

}
//# sourceMappingURL=main.min.js.map
